C51 COMPILER V9.55   __________                                                            03/19/2020 16:44:24 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE __________
OBJECT MODULE PLACED IN .\Objects\ÎÂ¶È¼ÇÂ¼Æ÷.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE ÎÂ¶È¼ÇÂ¼Æ÷.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Î
                    -Â¶È¼ÇÂ¼Æ÷.lst) TABS(2) OBJECT(.\Objects\ÎÂ¶È¼ÇÂ¼Æ÷.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "DEPUTY.H"
   3          unsigned char shuma[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff,0xc6}; 
   4          unsigned char yi,er,san,si,wu,liu,qi,ba;
   5          unsigned char model,time;//Èý¸öÄ£Ê½£¬¶¨Ê±Ê±¼ä
   6          unsigned int count;//¶¨Ê±Æ÷¼ÆÊý
   7          extern unsigned char shijian[]; //Ê±ÖÓÊ±¼ä¼Ì³Ð
   8          extern unsigned char set_time[]; //
   9          unsigned char aa,xx;//¼ÇÂ¼ÎÂ¶È¼ÇÂ¼´ÎÊýºÍÊÇ·ñµÚÒ»´Î¼ÆÊý
  10          unsigned char wendu[];  //ÎÂ¶È¼ÆÊý´æ·Å
  11          unsigned char i;//ÎÂ¶ÈÏÔÊ¾¼ÆÊý
  12          
  13          sfr AUXR = 0x8e;
  14          sbit S7=P3^0;
  15          sbit S6=P3^1;
  16          sbit S5=P3^2;
  17          sbit S4=P3^3;
  18          
  19          
  20          void Delay(unsigned int t)
  21          {
  22   1        while(t--);
  23   1      }
  24          
  25          void display()
  26          {
  27   1        P2 = 0xc0;
  28   1        P0 = 0x01;
  29   1        P2 = 0xff;
  30   1        P0 = shuma[yi];
  31   1        Delay(100);
  32   1        
  33   1        P2 = 0xc0;
  34   1        P0 = 0x02;
  35   1        P2 = 0xff;
  36   1        P0 = shuma[er];
  37   1        Delay(100);
  38   1        
  39   1        P2 = 0xc0;
  40   1        P0 = 0x04;
  41   1        P2 = 0xff;
  42   1        P0 = shuma[san];
  43   1        Delay(100);
  44   1        
  45   1        P2 = 0xc0;
  46   1        P0 = 0x08;
  47   1        P2 = 0xff;
  48   1        P0 = shuma[si];
  49   1        Delay(100);
  50   1        
  51   1        P2 = 0xc0;
  52   1        P0 = 0x10;
  53   1        P2 = 0xff;
  54   1        P0 = shuma[wu];
C51 COMPILER V9.55   __________                                                            03/19/2020 16:44:24 PAGE 2   

  55   1        Delay(100);
  56   1        
  57   1        P2 = 0xc0;
  58   1        P0 = 0x20;
  59   1        P2 = 0xff;
  60   1        P0 = shuma[liu];
  61   1        Delay(100);
  62   1        
  63   1        P2 = 0xc0;
  64   1        P0 = 0x40;
  65   1        P2 = 0xff;
  66   1        P0 = shuma[qi];
  67   1        Delay(100);
  68   1        
  69   1        P2 = 0xc0;
  70   1        P0 = 0x80;
  71   1        P2 = 0xff;
  72   1        P0 = shuma[ba];
  73   1        Delay(100);
  74   1      }
  75          
  76          void InitTimer0() //100ms,¶¨Ê±Æ÷1t
  77          {
  78   1        AUXR |= 0x80;
  79   1        TMOD &= 0xF0;
  80   1        TH0 = 0xAE;
  81   1        TL0 = 0xFB;
  82   1        
  83   1        TR0 = 1;
  84   1        TF0 = 0;
  85   1      }
  86          
  87          void ServiceTimer0() interrupt 1
  88          {
  89   1        count++;
  90   1      }
  91          void jilu_wendu()
  92          {
  93   1        if(time==1)
  94   1        {
  95   2          if(aa==0&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
  96   2          else if(aa==1&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
  97   2          else if(aa==2&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
  98   2          else if(aa==3&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
  99   2          else if(aa==4&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 100   2          else if(aa==5&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 101   2          else if(aa==6&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 102   2          else if(aa==7&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 103   2          else if(aa==8&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 104   2          else if(aa==9&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 105   2        }
 106   1        if(time==5)
 107   1        {
 108   2          if(aa==0&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 109   2          else if(aa==1&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 110   2          else if(aa==2&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 111   2          else if(aa==3&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 112   2          else if(aa==4&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 113   2          else if(aa==5&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 114   2          else if(aa==6&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 115   2          else if(aa==7&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 116   2          else if(aa==8&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
C51 COMPILER V9.55   __________                                                            03/19/2020 16:44:24 PAGE 3   

 117   2          else if(aa==9&&count==50){wendu[aa]=get_wendu();count=0;aa++;}
 118   2        }
 119   1        if(time==30)
 120   1        {
 121   2          if(aa==0&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 122   2          else if(aa==1&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 123   2          else if(aa==2&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 124   2          else if(aa==3&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 125   2          else if(aa==4&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 126   2          else if(aa==5&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 127   2          else if(aa==6&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 128   2          else if(aa==7&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 129   2          else if(aa==8&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 130   2          else if(aa==9&&count==300){wendu[aa]=get_wendu();count=0;aa++;}
 131   2        }
 132   1        if(time==60)
 133   1        {
 134   2          if(aa==0&&count==10){wendu[aa]=get_wendu();count=0;aa++;}
 135   2          else if(aa==1&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 136   2          else if(aa==2&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 137   2          else if(aa==3&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 138   2          else if(aa==4&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 139   2          else if(aa==5&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 140   2          else if(aa==6&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 141   2          else if(aa==7&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 142   2          else if(aa==8&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 143   2          else if(aa==9&&count==600){wendu[aa]=get_wendu();count=0;aa++;}
 144   2        }
 145   1      }
 146          void Key()
 147          {
 148   1        if(model==0) //Ä£Ê½0£¬S4°´¼üÇÐ»»ËÄ¸öÊ±¼ä
 149   1        {
 150   2          if(S4==0)
 151   2          {
 152   3            if(time==1){time==5;}
*** WARNING C275 IN LINE 152 OF ÎÂ¶È¼ÇÂ¼Æ÷.c: expression with possibly no effect
 153   3            else if(time==5){time==30;}
*** WARNING C275 IN LINE 153 OF ÎÂ¶È¼ÇÂ¼Æ÷.c: expression with possibly no effect
 154   3            else if(time==30){time==60;}
*** WARNING C275 IN LINE 154 OF ÎÂ¶È¼ÇÂ¼Æ÷.c: expression with possibly no effect
 155   3            else if(time==60){time==1;}
*** WARNING C275 IN LINE 155 OF ÎÂ¶È¼ÇÂ¼Æ÷.c: expression with possibly no effect
 156   3            while(S4==0);
 157   3          }
 158   2          yi=11,er=11,san=11,si=11,wu=11,liu=10,qi=time/10,ba=time%10;
 159   2          if(S5==0){model=1;while(S5==0);}
 160   2        }
 161   1        else if(model==1)
 162   1        {
 163   2          EA=1;ET0=1;
 164   2          if(xx==0){Init_DS();xx=1;}
 165   2          
 166   2          jilu_wendu();
 167   2          
 168   2          Get_DS();
 169   2          yi=set_time[2]/10;er=set_time[2]%10;san=10,si=set_time[1]/10;wu=set_time[1]%10;liu=10;qi=set_time[0]/10;
             -ba=set_time[0]%10;
 170   2          
 171   2          if(aa==10){model=2;aa=0;}
 172   2        }
 173   1        else if(model==2)
C51 COMPILER V9.55   __________                                                            03/19/2020 16:44:24 PAGE 4   

 174   1        {
 175   2          if(S7==0){model=0;while(S6==0);}
 176   2          if(count==5)
 177   2            {
 178   3              P2=0x80;P0=0xfe;
 179   3              if(count==10){count=0;}
 180   3            }
 181   2          else{P2=0x80;P0=0xff;}
 182   2          
 183   2          if(S6==0){EA=0;ET0=0;count=0;i++;while(S6==0);}
 184   2          if(i==10){i=0;}
 185   2          
 186   2          yi=10;er=i/10;san=i%10;si=11;wu=11;liu=10;qi=wendu[i]/10;ba=wendu[i]%10;
 187   2        }   
 188   1      }
 189          
 190          
 191          void allinit()
 192          {
 193   1        P2 = 0xc0;
 194   1        P0 = 0x00;
 195   1        P2 = 0x80;
 196   1        P0 = 0xff;
 197   1        P2 = 0xc0;
 198   1        P0 = 0xff;
 199   1        P2 = 0xff;
 200   1        P0 = 0xff;
 201   1      }
 202          
 203          void mian()
 204          {
 205   1        time=1;
 206   1        xx=0;
 207   1        InitTimer0();
 208   1        allinit();
 209   1        while(1)
 210   1        {
 211   2          Key();
 212   2          display();
 213   2        }
 214   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1249    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
